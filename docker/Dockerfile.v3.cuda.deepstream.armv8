FROM harbor.bigdata.seisys.cn:8443/v2x/sadip_deepstream:v0.0.5

ENV DEBIAN_FRONTEND=noninteractive


# 添加NVIDIA容器工具包的GPG密钥和存储库
RUN apt-get update && apt-get install -y gpg-agent software-properties-common
RUN curl -fsSL https://nvidia.github.io/libnvidia-container/gpgkey | gpg --dearmor -o /usr/share/keyrings/nvidia-container-toolkit-keyring.gpg \
  && curl -s -L https://nvidia.github.io/libnvidia-container/ubuntu20.04/libnvidia-container.list | \
    sed 's#deb https://#deb [signed-by=/usr/share/keyrings/nvidia-container-toolkit-keyring.gpg] https://#g' | \
    tee /etc/apt/sources.list.d/nvidia-container-toolkit.list

# 更新包列表并安装NVIDIA容器工具包
RUN apt-get update && \
    apt-get install -y nvidia-container-toolkit

# 为ARM64添加CUDA存储库
#RUN wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2204/sbsa/cuda-keyring_1.1-1_all.deb && \
#    dpkg -i cuda-keyring_1.1-1_all.deb && \
#    apt-get update

# 安装CUDA (选择适合ARM64的版本)
# 注意：可以根据需要选择特定的CUDA版本，如cuda-toolkit-12-2
# RUN apt-get install -y cuda-minimal-build-12-2 cuda-libraries-dev-12-2 cuda-nvtx-12-2

# 配置 NVIDIA Container Toolkit
# 为Jetson添加L4T存储库
# RUN apt-key adv --fetch-keys https://repo.download.nvidia.com/jetson/jetson-ota-public.asc && \
#    echo "deb https://repo.download.nvidia.com/jetson/common r35.4 main" > /etc/apt/sources.list.d/nvidia-l4t-apt-source.list && \
#    echo "deb https://repo.download.nvidia.com/jetson/t234 r35.4 main" >> /etc/apt/sources.list.d/nvidia-l4t-apt-source.list && \
#    apt-get update

# 安装Jetson特定的CUDA包
# RUN apt-get install -y cuda-toolkit-11-4

RUN apt install uuid-dev software-properties-common -y
RUN add-apt-repository -y ppa:ecal/ecal-5.9
RUN apt install ecal -y


RUN apt install libeigen3-dev libopencv-dev python3-opencv psmisc iputils-ping traceroute ntpdate -y

RUN pip3 install jetson-stats \
    && rm -rf /var/cache/apk/*

# 设置环境变量
ENV NVIDIA_VISIBLE_DEVICES all
ENV NVIDIA_DRIVER_CAPABILITIES compute,utility

# 创建必要的目录
RUN mkdir -p /run/podman

# 设置 CUDA 相关环境变量
ENV CUDA_HOME=/usr/local/cuda
ENV PATH=${CUDA_HOME}/bin:${PATH}
ENV LD_LIBRARY_PATH=${CUDA_HOME}/lib64:${LD_LIBRARY_PATH}


RUN chmod -R 755 /root/sadip
# 克隆 dcgm-exporter 仓库
# RUN mkdir -p git && cd git && git clone https://github.com/NVIDIA/dcgm-exporter.git && cd dcgm-exporter && git checkout 3.3.6-3.4.2 && make binary &&ls -l cmd/dcgm-exporter/dcgm-exporter && cp cmd/dcgm-exporter/dcgm-exporter /root/sadip/  


#COPY databus2/config/containers /etc/containers
COPY sadip/config/containers/containers_gpu.conf  /etc/containers/containers.conf
COPY sadip/bin/x64/default-counters.csv /root/sadip/config/
# 清理 APT 缓存
RUN apt-get clean && rm -rf /var/lib/apt/lists/*

#RUN rm -rf /root/databus2/git

# 设置入口点
#ENTRYPOINT ["podman"]
#CMD ["--help"]

CMD ["/bin/bash","run.sh"]


